//- Calendar form

mixin form_date(path, date)
	- var date = date || new Date()
	- var dd = date && (date.getFullYear() + '-' + ('0' + (date.getMonth() + 1)).slice(-2)  + '-' + ('0' + date.getDate()).slice(-2))
	- var hh = date && (date.getHours())
	- var mm = date && (date.getMinutes())
	span.date_form(class=attributes.class)
		input.date(type="text", name=path + '[date]', value=dd)
		select.hours(name=path + '[time][hours]')
			each hours, i in new Array(24)
				- var format = ('0' + i).slice(-2)
				option(value=format, selected=i == hh)= format
		span= ' :'
		select.minutes(name=path + '[time][minutes]')
			each hours, i in new Array(12)
				- var format = ('0' + (i*5)).slice(-2)
				option(value=format, selected=(i*5) <= mm)= format

//- Single Text Form

mixin form_text_single(path, object)
	input.ru(type="text", name="ru[" + path + "]", value=object && object['i18n'][path].get('ru'))
	input.en(type="text", name="en[" + path + "]", disabled, value=object && object['i18n'][path].get('en'))

//- Multiple Text Form

mixin form_text_multi(path, object)
	textarea.ru.editor(name="ru[" + path + "]",)= object && object['i18n'][path].get('ru')
	textarea.en.editor(name="en[" + path + "]", disabled)= object && object['i18n'][path].get('en')


//- Single Select Form

mixin form_single_select(path, options, select_option)
	if (!select_option)
		select(name=path)
			option(value='none') нет
			each option in options
				option(value=option._id)= option['i18n']['title'].get('ru') || '!!! ПУСТОЕ ПОЛЕ !!!'
	else
		select(name=path)
			option(value='none') нет
			each option in options
				option(value=option._id, selected=select_option == option._id.toString())= option['i18n']['title'].get('ru') || '!!! ПУСТОЕ ПОЛЕ !!!'

//- Multiple Select Form

mixin form_multiple_select(path, options, select_options)
	- var field = attributes.field || 'title'
	- var disable = attributes.disable
	- var none = attributes.none
	.snake_outer
		if (!select_options || select_options.length == 0)
			.snake
				input.back(type="button", value="-", disabled=disable)
				select(name=path + '[]', disabled=disable)
					unless none
						option(value='none') нет
					each option in options
						option(value=option._id)= option['i18n'][field].get('ru') || '!!! ПУСТОЕ ПОЛЕ !!!'
		else
			each select_option in select_options
				.snake
					input.back(type="button", value="-", disabled=disable)
					select(name=path + '[]', disabled=disable)
						unless none
							option(value='none') нет
						each option in options
							option(value=option._id, selected=option._id.toString() == select_option)= option['i18n'][field].get('ru') || '!!! ПУСТОЕ ПОЛЕ !!!'
							if (disable && (option._id.toString() == select_option))
								input(type='hidden', name=path + '[]', value=option._id)
		unless disable
			input.forward(type="button", value="+", disabled=disable)

//- Multiple Input Form

mixin form_multiple_input(path, options)
	.snake_outer
		if (!options || !options[path] || !options[path].length > 0)
			span.snake
				input.back(type="button", value="-")
				input.input(type='text', name=path + '[]')
		else
			each option in options[path]
				span.snake
					input.back(type="button", value="-")
					input.input(type='text', name=path + '[]', value=option)
		input.forward(type="button", value="+")

//- Single File Form

mixin form_single_file(path, object)
	if (object && object[path])
		label
			span= 'удалить | '
			input(type='checkbox', name=path + '_del')
		span &nbsp;
	input(type='file', name=path, accept=attributes.accept)

//- Multiple Files Form

mixin form_multiple_files(path, object)
	if (object && object.files.length > 0)
		each file, i in object.files
			label
				span= 'удалить | '
				input(type='checkbox', name='files_delete[]', value=file.path)
			span &nbsp;
			a(href=file.path, target='_blank')= file.description && file.description[0].value || 'файл ' + i
			br
		br
	.snake_outer
		.snake
			input(type="button", value='-').back
			input(type='file', name=path, accept=attributes.accept)
			input.input.ru.ru_file(type='text', name=path + '_desc[ru][]', placeholder='описание')
			input.input.en.en_file(type='text', name=path + '_desc[en][]', placeholder='description')
		//- br
		input(type="button", value='+').forward
		br

//- Images Upload Form

mixin form_images_upload(images)
	if !images
		.form_images_upload
			input#upload_fallback(type='file')
			.images_upload_preview
	else
		- function get_locale(option, lang) {return ((option.filter(function(locale) {return locale.lg == lang; })[0] || {}).value || ''); }
		.form_images_upload
			input#upload_fallback(type='file')
			if images.length > 0
				.upload_placeholder
					input(type='hidden', name='hold', value='true')
			.images_upload_preview
				each image, i in images
					.image_upload_preview(style='background-image:url(' + image.thumb + ')')
						input.image_upload_form(type='hidden', name='images[path][]', value=images_preview[i])
						.image_delete ×
						.image_description
							textarea.image_description_input.ru_img(name='images[description][ru][]', placeholder='Описание')= get_locale(image.description, 'ru')
							textarea.image_description_input.en_img(name='images[description][en][]', placeholder='Description')= get_locale(image.description, 'en')

//- Members form

mixin form_members(groups)
	.block_items
		each group in (groups && groups.length) ? groups : [{ hidden: true, mode: 'event', list: [null], title: [ {lg: 'ru', value: ''}, {lg: 'en', value: ''} ] }]
			.block_item.group(class= group.hidden ? 'hidden' : '', style=group.hidden ? 'display: none;': '')
				.group_options
					input.rm_block(type='button', value='- Удалить группу')
					input.up_block(type='button', value='▲')
					input.down_block(type='button', value='▼')
					span!= '&nbsp;&nbsp;&nbsp;||&nbsp;&nbsp;&nbsp;'
					span показать:
					select.group_mode
						option(value='event', selected=group.mode == 'event') в событии
						option(value='schedule', selected=group.mode == 'schedule') в расписании
						option(value='all', selected=group.mode == 'all') везде
				br
				.group_title
					input.ru(type="text", value=group.title.filter(function(locale) { return locale.lg == 'ru' })[0].value)
					input.en(type="text", disabled, value=group.title.filter(function(locale) { return locale.lg == 'en' })[0].value)
				br
				.group_list
					each list_item in group.list
						.list_item
							input.rm_member(type='button', value='-')
							select
								each member in members
									option(value=member._id, selected=list_item == member._id.toString())= member.i18n.name.get('ru')
					input.add_member(type='button', value='+')
				br
				div ------------
				br

		input.add_group(type='button', value='+ Добавить группу')

//- Comments form

mixin form_comments(comments)
	.block_items
		each comment in (comments && comments.length) ? comments : [{ hidden: true, title: [ {lg: 'ru', value: ''}, {lg: 'en', value: ''} ], description: [ {lg: 'ru', value: ''}, {lg: 'en', value: ''} ] }]
			.block_item.comment(class= comment.hidden ? 'hidden' : '', style=comment.hidden ? 'display: none;': '')
				.comment_options
					input.rm_block(type='button', value='- Удалить комментарий')
					input.up_block(type='button', value='▲')
					input.down_block(type='button', value='▼')
				br
				.comment_title
					input.ru(type="text", value=comment.title.filter(function(locale) { return locale.lg == 'ru' })[0].value)
					input.en(type="text", disabled, value=comment.title.filter(function(locale) { return locale.lg == 'en' })[0].value)
				br
				.comment_member
					select
						each member in members
							option(value=member._id, selected=comment.member == member._id.toString())= member.i18n.name.get('ru')
				br
				.comment_description
					textarea.ru.editor(type="text")=comment.description.filter(function(locale) { return locale.lg == 'ru' })[0].value
					textarea.en.editor(type="text", disabled)=comment.description.filter(function(locale) { return locale.lg == 'en' })[0].value
				br(style='clear: both;')
				div ------------
				br

		input.add_comment(type='button', value='+ Добавить комментарий')

//- Publications form

mixin form_publications(publications)
	.block_items
		each publication in (publications && publications.length) ? publications : [{ hidden: true, link: '', title: [ {lg: 'ru', value: ''}, {lg: 'en', value: ''} ], description: [ {lg: 'ru', value: ''}, {lg: 'en', value: ''} ] }]
			.block_item.publication(class= publication.hidden ? 'hidden' : '', style=publication.hidden ? 'display: none;': '')
				.publication_options
					input.rm_block(type='button', value='- Удалить публикацию')
					input.up_block(type='button', value='▲')
					input.down_block(type='button', value='▼')
				br
				.publication_title
					input.ru(type="text", value=publication.title.filter(function(locale) { return locale.lg == 'ru' })[0].value)
					input.en(type="text", disabled, value=publication.title.filter(function(locale) { return locale.lg == 'en' })[0].value)
				br
				.publication_link
					input.link(type="text", value=publication.link, placeholder='https://cnn.com')
					input.link_open(type='button', value='>')
				br
				.publication_description
					textarea.ru.editor(type="text")=publication.description.filter(function(locale) { return locale.lg == 'ru' })[0].value
					textarea.en.editor(type="text", disabled)=publication.description.filter(function(locale) { return locale.lg == 'en' })[0].value
				br(style='clear: both;')
				div ------------
				br

		input.add_publication(type='button', value='+ Добавить публикацию')

//- Schedule form

mixin form_schedule(schedule)
	.block_items
		each date in (schedule && schedule.length) ? schedule : [{ hidden: true, date: null, premiere: false }]
			.block_item.schedule(class= date.hidden ? 'hidden' : '', style=date.hidden ? 'display: none;': '')
				input.rm_block(type='button', value='-')
				input.date(type='text')
				span= ' -- '
				select
					each hours, i in new Array(24)
						- var format = ('0' + i).slice(-2)
						option(value=format)= format
				span :
				select
					each minute, i in new Array(12)
						- var format = ('0' + (i*5)).slice(-2)
						option(value=format)= format
				span= ' -- '
				label
					input(type='checkbox', name='premiere')
					!= ' премьера'
				br
				br
		input.add_date(type='button', value='+ Добавить дату')